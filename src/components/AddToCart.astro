---
import { actions } from "astro:actions";
import  Button  from "@/components/Button.svelte";
interface Props {
  text: string;
  id: string;
  variant?: "primary" | "secondary";
  className?: string;
}

const {text, id , variant = "primary", className =""} = Astro.props;

const variantClasses = {
  primary: "transparent text-gray-200 hover:bg-gray-200 hover:text-slate-600",
  secondary: "bg-gray-200 text-gray-800 hover:bg-gray-300"
};

const baseClasses = "overflow-hidden inline-block w-40 h-10 px-4 py-2 border-2 border-blue-400 transition-all duration-200 flex items-center justify-center relative group";
const {data, error} = await actions.checkStock(id);
const classes = `${baseClasses} ${variantClasses[variant]} ${!data ? "cursor-not-allowed" : ""} ${className}`;


---


<div data-add-to-cart data-product-id={id} class={classes}>
  <span class="truncate"> 
    {data? <Button client:load/> : "No Disponible"}
  </span>
</div>

<!-- <script>
  import { actions } from 'astro:actions';
  function addToCart() {
    const buttons = document.querySelectorAll('[data-add-to-cart]');
  buttons.forEach(button => {
    button.addEventListener('click', async(e) => {
      e.preventDefault();
      console.log("button click");
      const productId = (button as HTMLElement).dataset.productId;
      if (productId) {
        console.log("productId", productId);
        const {data, error} = await actions.addToCart(productId);
        if (!error) data? alert("item añadido "+productId) : alert("fallo añadir item "+productId);
      }
    });
  });
  }
  
  document.addEventListener('astro:after-swap', addToCart);
  document.addEventListener('astro:page-load', addToCart);
  addToCart();

  // Seleccionamos todos los botones por clase
  
  
</script> -->