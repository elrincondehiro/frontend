---
interface Props {
  name: string;
  slug: string;
  description: string;
  callToAction?: string;
  price: number;
  stock: number;
  categories: string[];
  active: boolean;
  archiveView: boolean;
}
const path = Astro.url.pathname.split("/");

const  {name, slug, description, callToAction, price, stock, categories, active, archiveView} = Astro.props;
const bgColor = archiveView && active ?"transparent hover:bg-slate-700": "bg-slate-700"  ;
const lineClamp = archiveView  ? "line-clamp-2" : "line-clamp-none" ;
const textColor = archiveView  && active?"text-gray-200 hover:text-white": "text-white"; 
const borderShadow = archiveView && active ? "border-blue-400 hover:border-blue-500 hover:shadow-2xl" : "shadow-2xl border-blue-500";

export const prerender = true

---

<div transition:name={`prod-card-${path[2]}-${slug}`} class={`${bgColor} ${textColor} ${borderShadow} border-2 w-full  space-y-4 py-4 px-6 overflow-hidden relative rounded-lg`}>
  {!active &&<div class="absolute inset-0 bg-black/30 backdrop-blur-sm "></div>}
  <h1 class="font-bold text-2xl ">{name}</h1>
  <p class={`${lineClamp} text-wrap`}>{description+". "+description}</p>
  {archiveView && 
  <div class="flex flex-row justify-center gap-3">
    <a class="inline-block px-4 py-2 border-2 border-blue-400 hover:bg-gray-200 hover:text-slate-600 hover:font-semibold" href={path[2]+"/producto/"+slug}>{callToAction+" "+name}</a>
    {/* Coponente de añadir al carrito  */}
    <a class="inline-block px-4 py-2 border-2 border-blue-400 hover:bg-gray-200 hover:text-slate-600 hover:font-semibold" href={slug}>Añadir al Carrito</a>
    
  </div>
  }
</div>