---
import ButtonFixed from "./ButtonFixed.astro";
interface Props {
  name: string;
  slug: string;
  description: string;
  callToAction?: string;
  price: number;
  stock: number;
  categories: string[];
  active: boolean;
  archiveView: boolean;
  featured: boolean;
}
const path = Astro.url.pathname.split("/");

const  {name, slug, description, callToAction, featured, price, stock, categories, active, archiveView} = Astro.props;
const bgColor = archiveView && active ?"hover:bg-slate-700": "bg-slate-700"  ;
const lineClamp = archiveView  ? "line-clamp-2" : "line-clamp-none" ;
const textColor = archiveView  && active?"text-gray-200 hover:text-white": "text-white"; 
const borderShadow = archiveView && active ? "border-blue-400 hover:border-blue-500 hover:shadow-2xl" : "shadow-2xl border-blue-500";

export const prerender = true

---

<div transition:name={`prod-card-${path[2]}-${slug}`} class={`${bgColor} ${textColor} ${borderShadow} border-2 w-full  space-y-4 py-4 px-6 overflow-hidden relative rounded-lg`}>
  {!active &&<div class="absolute z-10 inset-0 bg-black/30 backdrop-blur-sm "/>}
  {active && featured && <div class="absolute -ml-7 -mt-5  bg-red-900/90 rounded-md px-4 pt-1 sm:ml-0 sm:mt-0 sm:pt-0 ">Top!</div>}
  
  <h1 class="font-bold text-2xl ">{name}</h1>
  <p class={`${lineClamp} text-wrap`}>{description+". "+description}</p>
  <div class="flex flex-row justify-between items-center">
    <div class="flex flex-col sm:flex-row gap-4">
    {categories.sort( (a, b) =>  a.localeCompare(b) ).map((cat) => 
      <div class="outline-dashed outline-1 py-0.5 px-1 relative text-sm text-gray-200 items-start">
        <a class="absolute inset-0" href={`/categoria/${cat}`}/> {cat}
      </div>)}
    </div>
    <p class="text-sm text-gray-200 ">Stock: {stock} Precio: {price.toLocaleString()} €</p>
  </div>
  {archiveView && 
  <div class="flex flex-col items-center justify-center sm:flex-row gap-3">
    {/* <a class="inline-block px-4 py-2 border-2 border-blue-400 hover:bg-gray-200 hover:text-slate-600 " href={path[2]+"/producto/"+slug}>{callToAction+" "+name}</a> */}
    {/* Coponente de añadir al carrito  */}
    {active &&<ButtonFixed server:defer href={slug} variant="primary" disabled={false} text="Añadir al Carrito" defer={true}>
      <ButtonFixed slot="fallback" href="" variant="primary" disabled={true} text="Cargando"/>
      {/* <a slot="fallback" class="relative border-2 border-blue-400 hover:bg-gray-200 hover:text-slate-600 px-4 py-2" href="#">
        {"    Cargando    "}
      </a> */}
    </ButtonAddToCart>}
    
    <ButtonFixed href={path[2]+"/producto/"+slug} variant="primary" disabled={false} text={`${callToAction} ${name}`}/>

    
  </div>
  }
</div>

<!-- <style>
  * {
    outline: orchid solid 1px;
    }
</style> -->