---
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/Layout.astro"
import { getCollection } from "astro:content";
import SimpleCatCard from "@/components/SimpleCatCard.astro";
import SimpleProdCard from "@/components/SimpleProdCard.astro";
import CartDisplay from "@/components/CartDisplay.svelte";

export  const  getStaticPaths  = (async() => {
  const categories = await getCollection('categories', ({data}) => data.active === true);
  return categories.map(({data}) => ({
    params: { slug: data.slug },
    props: { name: data.name, description: data.description},
  }));
}) satisfies GetStaticPaths;

const {slug} = Astro.params;
const {name, description} = Astro.props;
const products = await getCollection('products', ({data}) => data.categories.includes(slug));
products.sort((a, b) => a.data.name.localeCompare(b.data.name));
products.sort((a, b) => (b.data.featured?1:0) - (a.data.featured ? 1:0));
products.sort((a, b) => (b.data.active?1:0) - (a.data.active?1:0));
export const prerender = true;
---

<Layout title={slug}>
  <a href="..">Volver atr√°s</a>
  <CartDisplay transition:name="CartDisplay"  client:load/>
  <SimpleCatCard name={name} description={description}  slug={slug} view="hero"/>
  {products.map(({data}) => {
    const {name, slug, description, price, stock, categories, active, featured} = data;
    return <SimpleProdCard stock={stock} featured={featured} price={price} categories={categories} name={name} description={description} slug={slug} active={active} view="archive"/>
    }
  )} 
</Layout>